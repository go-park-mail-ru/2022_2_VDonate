# NOTICE: we have only one config for all microservices, because we use only one database
# for all microservices, it can be fixed by using multiple DB for each microservice
# but it's not necessary for now, because we don't have high load service and our's
# microservices are not 'clean'.

# -----------------------------
# PostgreSQL configuration file
# -----------------------------

#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# Postgres is running in different network,
# so to secure connection it needs only localhost
listen_addresses = '*'
# Port is default for postgres
port = 5432
# That amount of max connections will cover all services rpc
max_connections = 100
# Only 2 backenders actually in team
superuser_reserved_connections = 2

#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# Set to 256MB, because machine can afford it and it will improve performance
shared_buffers = 256MB
# Set to 16MB because of machine hardware and it will improve performance
temp_buffers = 16MB			# min 800kB
# Value is good, since we have few queries with sorts, hash maps, etc
work_mem = 8MB				# min 64kB
# We use hash operations rarely, so it's ok to set multiplier to 1
hash_mem_multiplier = 1.0		# 1-1000.0 multiplier on hash table work_mem
# Value is fine, based on the RAM of the machine (4Gb), since we create indexes rarely
maintenance_work_mem = 128MB        # min 1MB
# Max worker processes is 4, since we have 2 cores
max_worker_processes = 4 # default is 8
#------------------------------------------------------------------------------
# REPORTING AND LOGGING
#------------------------------------------------------------------------------

# Logs in JSON format can be analyzed using PGBadger
log_destination = 'jsonlog'		# Valid values are combinations of
					# stderr, csvlog, jsonlog, syslog, and
					# eventlog, depending on platform.
					# csvlog and jsonlog require
					# logging_collector to be on.

# This is used when logging to stderr:
logging_collector = on		# Enable capturing of stderr, jsonlog,
					# and csvlog into log files. Required
					# to be on for csvlogs and jsonlogs.
					# (change requires restart)

log_rotation_age = 1d
log_rotation_size = 10MB

# 250 ms is the default threshold for what constitutes a slow query
log_min_duration_statement = 250	# -1 is disabled, 0 logs all statements
					# and their durations, > 0 logs only
					# statements running at least this number
					# of milliseconds



#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# 10 seconds is too long for a web app, user will not wait for that long
statement_timeout = 10000
# Lock timeout is lower than statement timeout, because second would always trigger first
lock_timeout = 8000
