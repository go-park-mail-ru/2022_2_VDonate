{
    "swagger": "2.0",
    "info": {
        "description": "## API of donation web service by VDonate team\n### Some useful links:\n- ### [Backend](https://github.com/go-park-mail-ru/2022_2_VDonate)\n- ### [Frontend](https://github.com/go-park-mail-ru/2022_2_VDonate)\n\n- ### [Trello](https://trello.com/b/BZHoJsHP/vdonate)",
        "title": "VDonate API",
        "termsOfService": "https://swagger.io/terms/",
        "contact": {
            "name": "VDonate Support",
            "email": "zeronethunter2001@gmail.com"
        },
        "version": "1.0"
    },
    "host": "vdonate.ml:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth": {
            "get": {
                "description": "Check authentication of `User` by cookies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User authentication request",
                "operationId": "auth",
                "responses": {
                    "200": {
                        "description": "Session was successfully found",
                        "schema": {
                            "$ref": "#/definitions/models.UserID"
                        }
                    },
                    "401": {
                        "description": "User is unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User was not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/donate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Send donate to author",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "donates"
                ],
                "summary": "Create donate",
                "operationId": "create_donate",
                "parameters": [
                    {
                        "description": "Donate Fields",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DonateMpfd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Donate was successfully created",
                        "schema": {
                            "$ref": "#/definitions/models.Donate"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/donate/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get donate by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "donates"
                ],
                "summary": "Get donate",
                "operationId": "get_donate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Donate was successfully create",
                        "schema": {
                            "$ref": "#/definitions/models.Donate"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/donates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get donates of user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "donates"
                ],
                "summary": "Get donates",
                "operationId": "get_donates",
                "responses": {
                    "200": {
                        "description": "Donates were successfully recieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Donate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authorization of `User`",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login request",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "username and password",
                        "name": "authData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session was successfully found",
                        "schema": {
                            "$ref": "#/definitions/models.UserID"
                        }
                    },
                    "400": {
                        "description": "Wrong login or password or bad data was received",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User was not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/logout": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get request for user logout",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logout",
                        "schema": {
                            "$ref": "#/definitions/models.EmptyStruct"
                        }
                    },
                    "400": {
                        "description": "Bad session / request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get posts with provided filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get posts",
                "operationId": "get_posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter to use to get posts. Filters: subscriptions",
                        "name": "filter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts were successfully received",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create post by user cookie",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create post",
                "operationId": "create_post",
                "parameters": [
                    {
                        "type": "string",
                        "example": "some text",
                        "name": "text",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "some title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Uploaded file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post was successfully created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseImagePosts"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Not a creator of post",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error / failed to create post",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get single post by post id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get single post",
                "operationId": "get_post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post was successfully received",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update post by post id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update post",
                "operationId": "update_post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "some text",
                        "name": "text",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "some title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Uploaded file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post was successfully updated",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseImagePosts"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Not a creator of post",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error / failed to create image",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete post by post id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Delete post",
                "operationId": "delete_post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post was successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/models.EmptyStruct"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Not a creator of post",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/{id}/likes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all likes by post id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get likes",
                "operationId": "get_posts_likes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Likes were successfully recieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Like"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create like on post",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create like",
                "operationId": "create_like",
                "responses": {
                    "200": {
                        "description": "Likes were successfully create",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create like on post",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Delete like",
                "operationId": "delete_like",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Likes were successfully deleted",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscribers": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Subscribe user to author with paid subscription",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "Subscribe",
                "operationId": "create_subscriber",
                "parameters": [
                    {
                        "description": "Subscription info with required AuthorID and Subscription ID",
                        "name": "Subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubscriptionMpfd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully subscribed",
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Not created",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Unsubscribe user from author",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "Unsubscribe",
                "operationId": "delete_subscriber",
                "parameters": [
                    {
                        "description": "Subscription info with required UserID, AuthorID and Subscription ID",
                        "name": "Subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubscriptionMpfd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscriber was successfully unsubscribed",
                        "schema": {
                            "$ref": "#/definitions/models.EmptyStruct"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Not deleted",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscribers/{author_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Request to server for subscriptions of requested `Author`",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "Returns subscribers by author ID",
                "operationId": "get_subscribers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "author_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get list of author subscribers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Author"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get User subscriptions by Cookie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get User subscriptions",
                "operationId": "get_user_subscriptions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received subscriptions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AuthorSubscription"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "You are not supposed to make this requests",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscriptions/author": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Author subscriptions by author ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get Author subscriptions",
                "operationId": "get_author_subscriptions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "author_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received subscriptions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AuthorSubscriptionMpfd"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "You are not supposed to make this requests",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Author subscription by user's Cookie",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Create Author subscription",
                "operationId": "create_author_subscription",
                "parameters": [
                    {
                        "type": "string",
                        "example": "filename.jpeg",
                        "name": "img",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "example": 2999,
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "some text",
                        "name": "text",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 15,
                        "name": "tier",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "some title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload image",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created subscription",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseImageSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "You are not supposed to make this requests",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscriptions/author/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Author subscription by subscription id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Update Author subscription",
                "operationId": "update_author_subscription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "filename.jpeg",
                        "name": "img",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "example": 2999,
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "some text",
                        "name": "text",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 15,
                        "name": "tier",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "some title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload image",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated subscription",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseImageSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "You are not supposed to make this requests",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal / update error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Author subscription by subscription id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Delete Author subscription",
                "operationId": "delete_author_subscription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated subscription",
                        "schema": {
                            "$ref": "#/definitions/models.EmptyStruct"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "You are not supposed to make this requests",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal / delete error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscriptions/author{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Author subscription by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get Author subscription",
                "operationId": "get_author_subscription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received subscription",
                        "schema": {
                            "$ref": "#/definitions/models.AuthorSubscriptionMpfd"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "You are not supposed to make this requests",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Request to server for `User` creation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Creates a User",
                "operationId": "signup",
                "parameters": [
                    {
                        "description": "POST request of all information about `User`",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserMpfd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User was successfully created",
                        "schema": {
                            "$ref": "#/definitions/models.UserID"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Username or email is already exists",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a User information from server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a User",
                "operationId": "get_user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User was successfully received",
                        "schema": {
                            "$ref": "#/definitions/models.Author"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user by user id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "operationId": "update_user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "It's me Mario'",
                        "name": "about",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "admin@mail.ru",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "isAuthor",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "*****",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "admin",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Uploaded file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User was successfully updated",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseImageUsers"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "No session provided",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Not a user",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal error / failed to create user",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "models.AuthUser": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "*****"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "models.Author": {
            "type": "object",
            "required": [
                "email",
                "isAuthor",
                "username"
            ],
            "properties": {
                "about": {
                    "type": "string",
                    "example": "it's info about myself"
                },
                "avatar": {
                    "type": "string",
                    "example": "filename.jpeg"
                },
                "countSubscribers": {
                    "type": "integer",
                    "example": 120
                },
                "countSubscriptions": {
                    "type": "integer",
                    "example": 25
                },
                "email": {
                    "type": "string",
                    "example": "admin@mail.ru"
                },
                "isAuthor": {
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "models.AuthorSubscription": {
            "type": "object",
            "required": [
                "price",
                "text",
                "tier",
                "title"
            ],
            "properties": {
                "authorAvatar": {
                    "type": "string",
                    "example": "path/to/img"
                },
                "authorID": {
                    "type": "integer",
                    "example": 1
                },
                "authorName": {
                    "type": "string",
                    "example": "leo"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "img": {
                    "type": "string",
                    "example": "filename.jpeg"
                },
                "price": {
                    "type": "integer",
                    "example": 2999
                },
                "text": {
                    "type": "string",
                    "example": "some text"
                },
                "tier": {
                    "type": "integer",
                    "example": 15
                },
                "title": {
                    "type": "string",
                    "example": "some title"
                }
            }
        },
        "models.AuthorSubscriptionMpfd": {
            "type": "object",
            "required": [
                "price",
                "text",
                "tier",
                "title"
            ],
            "properties": {
                "img": {
                    "type": "string",
                    "example": "filename.jpeg"
                },
                "price": {
                    "type": "integer",
                    "example": 2999
                },
                "text": {
                    "type": "string",
                    "example": "some text"
                },
                "tier": {
                    "type": "integer",
                    "example": 15
                },
                "title": {
                    "type": "string",
                    "example": "some title"
                }
            }
        },
        "models.Donate": {
            "type": "object",
            "properties": {
                "authorId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.DonateMpfd": {
            "type": "object",
            "required": [
                "authorID",
                "price"
            ],
            "properties": {
                "authorID": {
                    "type": "integer",
                    "example": 12
                },
                "price": {
                    "type": "integer",
                    "example": 3000
                }
            }
        },
        "models.EmptyStruct": {
            "type": "object"
        },
        "models.Like": {
            "type": "object",
            "required": [
                "postID",
                "userID"
            ],
            "properties": {
                "postID": {
                    "type": "integer",
                    "example": 222
                },
                "userID": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "models.Post": {
            "type": "object",
            "required": [
                "author",
                "img",
                "isLiked",
                "likesNum",
                "text",
                "title"
            ],
            "properties": {
                "author": {
                    "$ref": "#/definitions/models.ResponseImageUsers"
                },
                "img": {
                    "type": "string",
                    "example": "path/to/image.jpeg"
                },
                "isLiked": {
                    "type": "boolean",
                    "example": true
                },
                "likesNum": {
                    "type": "integer",
                    "example": 5
                },
                "postID": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "some text"
                },
                "title": {
                    "type": "string",
                    "example": "some title"
                },
                "userID": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.ResponseImagePosts": {
            "type": "object",
            "required": [
                "imgPath",
                "postID"
            ],
            "properties": {
                "imgPath": {
                    "type": "string",
                    "example": "/path/to/image.jpeg"
                },
                "postID": {
                    "type": "integer",
                    "example": 25
                }
            }
        },
        "models.ResponseImageSubscription": {
            "type": "object",
            "required": [
                "authorImg",
                "authorName",
                "imgPath",
                "subscriptionID"
            ],
            "properties": {
                "authorImg": {
                    "type": "string",
                    "example": "path/to/author/img"
                },
                "authorName": {
                    "type": "string",
                    "example": "leo"
                },
                "imgPath": {
                    "type": "string",
                    "example": "/path/to/image.jpeg"
                },
                "subscriptionID": {
                    "type": "integer",
                    "example": 25
                }
            }
        },
        "models.ResponseImageUsers": {
            "type": "object",
            "required": [
                "imgPath",
                "userID",
                "username"
            ],
            "properties": {
                "imgPath": {
                    "type": "string",
                    "example": "/path/to/image.jpeg"
                },
                "userID": {
                    "type": "integer",
                    "example": 25
                },
                "username": {
                    "type": "string",
                    "example": "leo"
                }
            }
        },
        "models.Subscription": {
            "type": "object",
            "required": [
                "authorID",
                "authorSubscriptionID",
                "subscriberID"
            ],
            "properties": {
                "authorID": {
                    "type": "integer",
                    "example": 1
                },
                "authorSubscriptionID": {
                    "type": "integer",
                    "example": 1
                },
                "subscriberID": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "models.SubscriptionMpfd": {
            "type": "object",
            "required": [
                "authorID",
                "authorSubscriptionID"
            ],
            "properties": {
                "authorID": {
                    "type": "integer",
                    "example": 12
                },
                "authorSubscriptionID": {
                    "type": "integer",
                    "example": 13
                }
            }
        },
        "models.UserID": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "models.UserMpfd": {
            "type": "object",
            "required": [
                "about",
                "email",
                "isAuthor",
                "password",
                "username"
            ],
            "properties": {
                "about": {
                    "type": "string",
                    "example": "It's me Mario'"
                },
                "email": {
                    "type": "string",
                    "example": "admin@mail.ru"
                },
                "isAuthor": {
                    "type": "boolean",
                    "example": true
                },
                "password": {
                    "type": "string",
                    "example": "*****"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Authorization via Cookie",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}