name: actions
on: [ push ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: Build the project
        run: make local_build
  golangci-lint:
    name: lint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: -c configs/.golangci.yaml
  test:
    name: test
    needs: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: Installing mockgen
        run: go install github.com/golang/mock/mockgen@v1.6.0
      - name: Setup mocks
        run: make mocks
      - name: Testing
        run: make cover_out
      - name: Go Coverage Badge
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: c.out
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v12
        id: verify-changed-files
        with:
          files: README.md
      - name: Commit changes
          if: steps.verify-changed-files.outputs.files_changed == 'true'
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add README.md
            git commit -m "chore: Updated coverage badge."
      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}
      - name: Coverage check
        env:
          TESTCOVERAGE_THRESHOLD: 10
        run: |
          echo "Checking test coverage is above threshold..."
          echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
          totalCoverage=`make cover_out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Current test coverage : $totalCoverage %"
          if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
              echo "OK"
          else
              echo "Current test coverage is below threshold. Please add more tests or adjust threshold to a lower value."
              echo "Failed"
              exit 1
          fi
  build_push_api:
    name: build and push api
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deployments/deploy/api/Dockerfile
          push: true
          tags: zeronethunter/vdonate-api:latest
