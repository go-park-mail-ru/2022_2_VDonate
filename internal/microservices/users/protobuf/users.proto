syntax = "proto3";

package user;

option go_package = "github.com/go-park-mail-ru/2022_2_VDonate/internal/microservices/users/protobuf";

import "internal/microservices/auth/protobuf/auth.proto";
import "google/protobuf/empty.proto";

message User {
  uint64 id = 1;
  string username = 2;
  string email = 3;
  string password = 4;
  string avatar = 5;
  bool is_author = 6;
  string about = 7;
  uint64 balance = 8;

  uint64 count_subscriptions = 9;
  uint64 count_subscribers = 10;
  uint64 count_posts = 11;
  uint64 count_mounth_subscribers = 12;
  uint64 count_mounth_profit = 13;
}

message UserIDs {
  repeated UserID ids = 1;
}

message LessUser {
  uint64 id = 1;
  string username = 2;
  string avatar = 3;
}

message UsersArray {
  repeated User users = 1;
}

message UserID {
  uint64 user_id = 1;
}

message UserAuthorPair {
  uint64 user_id = 1;
  uint64 author_id = 2;
}

message Username {
  string username = 1;
}

message Keyword {
  string keyword = 1;
}

message Email {
  string email = 1;
}

message File {
  bytes file = 1;
}

message PostID {
  uint64 postID = 1;
}

message PostsNum {
  uint64 count_posts = 1;
}

message SubscribersNum {
  uint64 count_subscribers = 1;
}

message Profit {
  uint64 count_mounth_profit = 1;
}

service Users {
  rpc Update(User) returns(google.protobuf.Empty);
  rpc Create(User) returns(UserID);
  rpc GetAuthorByUsername(Keyword) returns(UsersArray);
  rpc GetByID(UserID) returns(User);
  rpc GetBySessionID(auth.SessionID) returns(User);
  rpc GetByEmail(Email) returns(User);
  rpc GetByUsername(Username) returns(User);
  rpc GetUserByPostID(PostID) returns(User);
  rpc GetAllAuthors(google.protobuf.Empty) returns(UsersArray);
  rpc GetPostsNum(UserID) returns(PostsNum);
  rpc GetSubscribersNumForMounth(UserID)  returns(SubscribersNum);
  rpc GetProfitForMounth(UserID) returns(Profit);
  rpc DropBalance(UserID) returns(google.protobuf.Empty);
}