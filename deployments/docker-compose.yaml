version: "3.7"
services:
#  api:
#    hostname: api
#    container_name: vdonate-api
#    image: zeronethunter/vdonate-api
#    ports:
#      - "8080:8080"
#      - "8079:8079"
#    env_file:
#      - ../.env
#    volumes:
#      - /etc/letsencrypt/live/vdonate.ml/fullchain.pem:/etc/letsencrypt/live/vdonate.ml/fullchain.pem
#      - /etc/letsencrypt/live/vdonate.ml/privkey.pem:/etc/letsencrypt/live/vdonate.ml/privkey.pem
#    networks:
#      - vdonate-network-api
  auth:
    hostname: auth
    container_name: vdonate-auth
    image: zeronethunter/vdonate-auth
    ports:
      - "8081:8081"
      - "9081:9081"
    depends_on:
      - db
    networks:
      - vdonate-network-api
  donates:
    hostname: donates
    container_name: vdonate-donates
    image: zeronethunter/vdonate-donates
    ports:
      - "8082:8082"
      - "9082:9082"
    depends_on:
      - db
    networks:
      - vdonate-network-api
  images:
    hostname: images
    container_name: vdonate-images
    image: zeronethunter/vdonate-images
    ports:
      - "8083:8083"
      - "9083:9083"
    env_file:
      - ../.env
    depends_on:
      - db
      - s3storage
    networks:
      - vdonate-network-api
  posts:
    hostname: posts
    container_name: vdonate-posts
    image: zeronethunter/vdonate-posts
    ports:
      - "8084:8084"
      - "9084:9084"
    depends_on:
      - db
    networks:
      - vdonate-network-api
  subscribers:
    hostname: subscribers
    container_name: vdonate-subscribers
    image: zeronethunter/vdonate-subscribers
    ports:
      - "8085:8085"
      - "9085:9085"
    depends_on:
      - db
    networks:
      - vdonate-network-api
  subscriptions:
    hostname: subscriptions
    container_name: vdonate-subscriptions
    image: zeronethunter/vdonate-subscriptions
    ports:
      - "8086:8086"
      - "9086:9086"
    depends_on:
      - db
    networks:
      - vdonate-network-api
  users:
    hostname: users
    container_name: vdonate-users
    image: zeronethunter/vdonate-users
    ports:
      - "8087:8087"
      - "9087:9087"
    depends_on:
      - db
    networks:
      - vdonate-network-api

  db:
    hostname: postgresql
    container_name: vdonate-db
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ubuntu -d dev" ]
      interval: 2s
      timeout: 1s
      retries: 5
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ../.env
    volumes:
      - ../migrations/full_up.sql:/docker-entrypoint-initdb.d/init.sql
      - /var/lib/postgresql/data:/var/lib/postgresql/data
    networks:
      - vdonate-network-api

  prometheus:
    hostname: prometheus
    image: prom/prometheus:latest
    container_name: vdonate-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - prometheus_data:/prometheus
      - ../configs/prometheus.yml:/etc/prometheus/prometheus.yml
    expose:
      - "9090"
    networks:
      - vdonate-network-api

  node-exporter:
    hostname: node-exporter
    image: prom/node-exporter:latest
    container_name: vdonate-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - "9100"
    networks:
      - vdonate-network-api

  grafana:
    image: grafana/grafana:latest
    container_name: vdonate-grafana
    volumes:
      - ../configs/grafana/provisioning:/etc/grafana/provisioning
      - ../configs/grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=zenehu
      - GF_SECURITY_ADMIN_PASSWORD=secretkey
      - GF_USERS_ALLOW_SIGN_UP=true
    ports:
      - "3000:3000"
    networks:
      - vdonate-network-api

  s3storage:
    hostname: vdonate.ml
    container_name: vdonate-cloud
    image: quay.io/minio/minio:RELEASE.2022-10-21T22-37-48Z
    command: server --console-address ":9099" /data
    volumes:
      - ~/minio/data:/data
    restart: always
    ports:
      - "9000:9000"
      - "9099:9099"
    env_file:
      - ../.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - vdonate-network-api

  notifications:
    hostname: notifications
    container_name: vdonate-notifications
    image: zeronethunter/vdonate-notifications
    ports:
      - "1234:1234"
    depends_on:
      - db
      - posts
      - users
      - subscribers
    networks:
      - vdonate-network-api

networks:
  vdonate-network-api:
    name: "vdonate-network-api"
    driver: bridge
    external: false

volumes:
  prometheus_data: {}
  grafana_data: {}